# -*- coding: utf-8 -*-
"""3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1AiRaxrK_QlJveAslSc2WOWAZYXnJ7M3R
"""

!pip install openai gradio

!pip install -U google-generativeai

import os

os.makedirs("models", exist_ok=True)
os.makedirs("outputs", exist_ok=True)
os.makedirs("prompts", exist_ok=True)

import google.generativeai as genai
import getpass

api_key = getpass.getpass("Enter your Gemini API key:")
genai.configure(api_key=api_key)

from datetime import datetime
import re

def generate_openscad_code_with_gemini(prompt: str):
    model = genai.GenerativeModel("gemini-1.5-pro-latest")  # ‚úÖ correct model path for v1

    system_instruction = (
        "You are an expert in 3D modeling using OpenSCAD. "
        "Return only the OpenSCAD code inside triple backticks. No explanations or notes."
    )

    response = model.generate_content(f"{system_instruction}\n\nPrompt: {prompt}")
    text = response.text

    # Extract OpenSCAD code from ``` block
    match = re.search(r"```(?:openscad)?\n(.+?)```", text, re.DOTALL)
    openscad_code = match.group(1).strip() if match else text.strip()

    # Save .scad file
    timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
    filename = f"models/generated_{timestamp}.scad"
    with open(filename, "w") as f:
        f.write(openscad_code)

    return filename, openscad_code

filename, code = generate_openscad_code_with_gemini(
    "a cube of side 20m"
)
print(f"‚úÖ Saved to: {filename}")
print("\nüìê OpenSCAD Code:\n")
print(code)